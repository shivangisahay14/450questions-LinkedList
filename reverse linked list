/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // Time: O(n)
    // Space: O(1)
    ListNode* reverseList(ListNode* head) {
        ListNode * pre = nullptr, * cur = head;
        while (cur) {
            auto tmp = cur->next;
            cur->next = pre;
            pre = cur, cur = tmp;
        }
        return pre;
    }
};


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 
// Base Case 1 : head is nullptr
// Base Case 2 : single node
    // 1 --> 2 <-- 3
     head         res
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if (!head || !head->next) return head;
        ListNode * res = reverseList(head->next);
        head->next->next = head;
        head->next = nullptr;
        return res;
    }
};
